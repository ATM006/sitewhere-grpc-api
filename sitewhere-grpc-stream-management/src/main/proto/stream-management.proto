syntax = "proto3";

package com.sitewhere.grpc.service;

option java_multiple_files = true;
option java_package = "com.sitewhere.grpc.service";
option java_outer_classname = "DeviceStreamServices";

import "stream-model.proto";
import "sitewhere-common.proto";

// Device stream management APIs.
service DeviceStreamManagement {

	// ######################
	// ### DEVICE STREAMS ###
	// ######################
	
	// Create a new device stream.
	rpc CreateDeviceStream (GCreateDeviceStreamRequest) returns (GCreateDeviceStreamResponse) {}	
	
	// Get device stream by stream id.
	rpc GetDeviceStreamByStreamId (GGetDeviceStreamByStreamIdRequest) returns (GGetDeviceStreamByStreamIdResponse) {}

	// List devices streams that meet criteria.
	rpc ListDeviceStreams (GListDeviceStreamsRequest) returns (GListDeviceStreamsResponse) {}
}

// ######################
// ### DEVICE STREAMS ###
// ######################
	
// Request for creating a device stream.
message GCreateDeviceStreamRequest {
	com.sitewhere.grpc.model.GUUID assignmentId = 1;
	com.sitewhere.grpc.model.GDeviceStreamCreateRequest request = 2;
}

// Response from creating a device stream.
message GCreateDeviceStreamResponse {
	com.sitewhere.grpc.model.GDeviceStream deviceStream = 1;
}

// Request for getting a device stream by stream id.
message GGetDeviceStreamByStreamIdRequest {
	com.sitewhere.grpc.model.GUUID streamId = 1;
}
	
// Response for getting a device stream by stream id.
message GGetDeviceStreamByStreamIdResponse {
	com.sitewhere.grpc.model.GDeviceStream deviceStream = 1;
}
	
// Request for listing device streams that meet criteria.
message GListDeviceStreamsRequest {
	com.sitewhere.grpc.model.GUUID assignmentId = 1;
	com.sitewhere.grpc.model.GDeviceStreamSearchCriteria criteria = 2;
}
	
// Response for listing device streams that meet criteria.
message GListDeviceStreamsResponse {
	com.sitewhere.grpc.model.GDeviceStreamSearchResults results = 1;
}
